@using System.Collections.ObjectModel;
@using BlazorApp1.Authentication
@using BlazorApp1.Data
@using System.Timers;
@using Microsoft.Exchange.WebServices.Data;
@using BlazorApp1.Models;
@using Microsoft.AspNetCore.Identity;
@using System.Security.Claims
@using MongoDB.Bson
@inject Emails Emailing
@inject IJSRuntime JSRuntime
@attribute [Authorize(Roles = "Administrator, HelpDesk")]

<div >

	<span>

	<p style="text-align:center;">Add Comment to Ticket</p>
		<textarea @bind="commentbox" cols="40" rows="5"></textarea>

	<br/>
	<button type="button" class="btn btn-outline-primary rounded-circle" style="width: 55px; height: 55px; float:right; margin-top:10px;" @onclick="()=> SendMessage(commentbox)"> <i class="fa fa-paper-plane fa-2x" aria-hidden="true" style="align-content:center;display: flex; justify-content: center;"></i></button>
	</span>
</div>
		




@code{
	private string commentbox;

	[CascadingParameter] private Task<AuthenticationState> provider { get; set; } = default!;
	private ClaimsPrincipal? user;

	[Parameter]
	public string messageid{ get; set; }

	async void SendMessage(string message)
	{
		// Backend function to send message here.
		Emailing.SendComment(messageid, commentbox, user.Identity.Name);
		// Refresh state.
		StateHasChanged();

	}


	protected override async System.Threading.Tasks.Task OnInitializedAsync()

	{
		// Getting current user data.
		var state = await provider;
		user = state.User;

	
	}
}